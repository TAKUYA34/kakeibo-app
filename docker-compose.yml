services:
  mongo:
    image: mongo:6.0
    restart: always
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"  # MongoDBのデフォルトポート
    networks:
      - my_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: kakeibo-backend
    restart: always
    env_file:
    - ./backend/.env.production  # 本番用の環境変数ファイル
    expose:
      - "5001"  # nginxからアクセスするためにはexposeでOK 本番用
    depends_on:
      - mongo
    networks:
      - my_network

  frontend:
    build:
      context: ./frontend # 本番用
      dockerfile: Dockerfile.prod
    container_name: kakeibo-frontend
    restart: always
    ports:
      - "3000"
    depends_on:
      - backend
    networks:
      - my_network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
      args:
        NGINX_CONF: prod.conf  # 本番時
    container_name: kakeibo-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    # volumes:
      # - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      # - ./nginx/conf.d/dev.conf:/etc/nginx/conf.d/default.conf # 開発用の設定ファイル
      # - ./certbot/www:/var/www/certbot
      # - ./certbot/conf:/etc/letsencrypt # SSL証明書発行
    networks:
      - my_network

  # certbot:
  #   image: certbot/certbot
  #   container_name: kakeibo-certbot
  #   volumes:
  #     - ./certbot/conf:/etc/letsencrypt
  #     - ./certbot/www:/var/www/certbot
  #   entrypoint: ""  # entrypoint を空にするのは対話実行を可能にするため

volumes:
  mongo_data:

networks:
  my_network:
    driver: bridge